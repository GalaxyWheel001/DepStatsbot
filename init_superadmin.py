"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
from database import DatabaseManager, async_session_maker, create_tables
from config import ADMIN_IDS
from loguru import logger

async def main():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ ADMIN_IDS"""
    
    logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    await create_tables()
    
    if not ADMIN_IDS:
        logger.error("‚ùå ADMIN_IDS –ø—É—Å—Ç –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")
        logger.info("üí° –î–æ–±–∞–≤—å—Ç–µ ID –∞–¥–º–∏–Ω–æ–≤ –≤ .env —Ñ–∞–π–ª: ADMIN_IDS=123456789,987654321")
        return
    
    logger.info(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(ADMIN_IDS)} ID –≤ ADMIN_IDS: {ADMIN_IDS}")
    
    added_count = 0
    existing_count = 0
    
    for admin_id in ADMIN_IDS:
        async with async_session_maker() as session:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ
            role = await DatabaseManager.get_admin_role(session, admin_id)
            
            if not role:
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
                await DatabaseManager.add_admin(session, admin_id, "superadmin", added_by=None)
                logger.info(f"‚úÖ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω {admin_id} –¥–æ–±–∞–≤–ª–µ–Ω")
                added_count += 1
            else:
                logger.info(f"‚ÑπÔ∏è  –ê–¥–º–∏–Ω {admin_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å —Ä–æ–ª—å—é: {role}")
                existing_count += 1
    
    logger.info("")
    logger.info("="*50)
    logger.info("üìä –ò–¢–û–ì–ò:")
    logger.info(f"   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–≤: {added_count}")
    logger.info(f"   ‚Ä¢ –£–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ: {existing_count}")
    logger.info(f"   ‚Ä¢ –í—Å–µ–≥–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–≤: {len(ADMIN_IDS)}")
    logger.info("="*50)
    logger.info("")
    
    if added_count > 0:
        logger.info("üéâ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
        logger.info("")
        logger.info("üìù –¢–µ–ø–µ—Ä—å —ç—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç:")
        logger.info("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
        logger.info("   ‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å/–æ—Ç–∫–ª–æ–Ω—è—Ç—å –∑–∞—è–≤–∫–∏")
        logger.info("   ‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        logger.info("   ‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets")
        logger.info("   ‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ (–¥–æ–±–∞–≤–ª—è—Ç—å/—É–¥–∞–ª—è—Ç—å)")
        logger.info("   ‚Ä¢ –í–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        logger.info("")
        logger.info("üí° –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏:")
        logger.info("   1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin")
        logger.info("   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'")
        logger.info("   3. –ù–∞–∂–º–∏—Ç–µ '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏'")
        logger.info("")
        logger.info("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py")
    else:
        logger.info("‚úÖ –í—Å–µ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        logger.info("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("‚ö†Ô∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

