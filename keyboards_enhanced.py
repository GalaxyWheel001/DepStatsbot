"""
–£–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ "–ù–∞–∑–∞–¥",
–¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫, FAQ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
"""
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import DEPOSIT_AMOUNTS
from localization import get_text

def get_main_menu_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text=get_text("menu_make_deposit", lang), 
            callback_data="menu_deposit"
        )],
        [InlineKeyboardButton(
            text=get_text("menu_my_applications", lang), 
            callback_data="menu_applications"
        )],
        [InlineKeyboardButton(
            text="‚ùì FAQ",
            callback_data="menu_faq"
        )],
        [InlineKeyboardButton(
            text=get_text("menu_support", lang), 
            callback_data="menu_support"
        )],
        [InlineKeyboardButton(
            text=get_text("menu_change_language", lang), 
            callback_data="menu_language"
        )]
    ])
    return keyboard

def get_deposit_amount_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –¥–µ–ø–æ–∑–∏—Ç–∞"""
    keyboard_buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å—É–º–º—ã –ø–æ 2 –≤ —Ä—è–¥
    for i in range(0, len(DEPOSIT_AMOUNTS), 2):
        row = []
        for j in range(2):
            if i + j < len(DEPOSIT_AMOUNTS):
                amount = DEPOSIT_AMOUNTS[i + j]
                row.append(
                    InlineKeyboardButton(
                        text=f"üí∞ {amount} USD", 
                        callback_data=f"amount_{amount}"
                    )
                )
        keyboard_buttons.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–î—Ä—É–≥–∞—è —Å—É–º–º–∞"
    keyboard_buttons.append([
        InlineKeyboardButton(
            text=get_text("custom_amount", lang), 
            callback_data="amount_custom"
        )
    ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard_buttons.append([
        InlineKeyboardButton(
            text=get_text("btn_menu", lang), 
            callback_data="back_to_menu"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)

def get_confirm_data_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text=get_text("yes_correct", lang), 
            callback_data="confirm_yes"
        )],
        [InlineKeyboardButton(
            text=get_text("change_data", lang), 
            callback_data="confirm_change"
        )],
        [InlineKeyboardButton(
            text=get_text("btn_cancel", lang), 
            callback_data="back_to_menu"
        )]
    ])
    return keyboard

def get_admin_keyboard(application_id: int, lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", 
                callback_data=f"admin_approve_{application_id}"
            ),
            InlineKeyboardButton(
                text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", 
                callback_data=f"admin_reject_{application_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìã –ò—Å—Ç–æ—Ä–∏—è", 
                callback_data=f"admin_history_{application_id}"
            )
        ]
    ])
    return keyboard

def get_retry_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", 
                callback_data="retry_yes"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("btn_menu", lang), 
                callback_data="back_to_menu"
            )
        ]
    ])
    return keyboard

def get_back_button(lang: str = "ru", show_back: bool = False) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é (—Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π –ù–∞–∑–∞–¥)"""
    buttons = []
    
    if show_back:
        buttons.append([InlineKeyboardButton(
            text=get_text("btn_back", lang), 
            callback_data="go_back"
        )])
    
    buttons.append([InlineKeyboardButton(
        text=get_text("btn_menu", lang), 
        callback_data="back_to_menu"
    )])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def get_language_keyboard(show_back: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    from localization import LANGUAGES
    
    buttons = [
        [InlineKeyboardButton(
            text=LANGUAGES["ru"], 
            callback_data="lang_ru"
        )],
        [InlineKeyboardButton(
            text=LANGUAGES["en"], 
            callback_data="lang_en"
        )],
        [InlineKeyboardButton(
            text=LANGUAGES["ur"], 
            callback_data="lang_ur"
        )]
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
    if show_back:
        buttons.append([InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ / Back / ŸàÿßŸæÿ≥", 
            callback_data="back_to_menu"
        )])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def get_faq_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è FAQ"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text=get_text("btn_menu", lang),
            callback_data="back_to_menu"
        )]
    ])
    return keyboard

def get_applications_list_keyboard(applications: list, lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞—è–≤–æ–∫ (–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ)"""
    buttons = []
    
    for app in applications:
        status_emoji = {
            "pending": "‚è≥",
            "approved": "‚úÖ",
            "rejected": "‚ùå",
            "cancelled": "üö´",
            "needs_info": "üí¨"
        }.get(app.status, "‚ùì")
        
        button_text = f"{status_emoji} #{app.id} ‚Ä¢ {app.amount} USD ‚Ä¢ {app.created_at.strftime('%d.%m')}"
        
        buttons.append([InlineKeyboardButton(
            text=button_text,
            callback_data=f"view_app_{app.id}"
        )])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    buttons.append([InlineKeyboardButton(
        text=get_text("btn_menu", lang),
        callback_data="back_to_menu"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_application_details_keyboard(application, lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –∑–∞—è–≤–∫–∏"""
    buttons = []
    
    # –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ –≤ —Å—Ç–∞—Ç—É—Å–µ pending, –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å
    if application.status == "pending":
        buttons.append([InlineKeyboardButton(
            text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É",
            callback_data=f"cancel_app_{application.id}"
        )])
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫
    buttons.append([InlineKeyboardButton(
        text="‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É –∑–∞—è–≤–æ–∫",
        callback_data="menu_applications"
    )])
    
    # –ö–Ω–æ–ø–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    buttons.append([InlineKeyboardButton(
        text=get_text("btn_menu", lang),
        callback_data="back_to_menu"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_payment_method_selection_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text=get_text("btn_payment_online", lang),
            callback_data="payment_method_online"
        )],
        [InlineKeyboardButton(
            text=get_text("btn_payment_manual", lang),
            callback_data="payment_method_manual"
        )],
        [InlineKeyboardButton(
            text=get_text("btn_menu", lang),
            callback_data="back_to_menu"
        )]
    ])
    return keyboard

def get_cancel_application_keyboard(application_id: int, lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã –∑–∞—è–≤–∫–∏"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å",
                callback_data=f"confirm_cancel_{application_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå –ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è",
                callback_data=f"view_app_{application_id}"
            )
        ]
    ])
    return keyboard

